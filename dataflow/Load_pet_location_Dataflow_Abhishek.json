{
	"name": "Load_pet_location_Dataflow_Abhishek",
	"properties": {
		"folder": {
			"name": "Team_Project_Pet"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "parquet_Abhishek_ds",
						"type": "DatasetReference"
					},
					"name": "locationsource"
				},
				{
					"dataset": {
						"referenceName": "parquet_Abhishek_ds",
						"type": "DatasetReference"
					},
					"name": "petlicensesource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowPet_Abhishek_ds",
						"type": "DatasetReference"
					},
					"name": "LocationStage"
				},
				{
					"dataset": {
						"referenceName": "SnowPet_Abhishek_ds",
						"type": "DatasetReference"
					},
					"name": "Petstage"
				}
			],
			"transformations": [
				{
					"name": "addtimeANDsource"
				},
				{
					"name": "addtimesource"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['pet/location.parquet']) ~> locationsource",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     wildcardPaths:['pet/petlicense.parquet']) ~> petlicensesource",
				"locationsource derive(LOAD_TIMESTAMP = currentTimestamp(),",
				"          SOURCE_FILE_NAME = 'Location') ~> addtimeANDsource",
				"petlicensesource derive(License_Issue_Date = toString(toDate(License_Issue_Date, 'dd-MMM-yy'), 'yyyy-MM-dd'),",
				"          LOAD_TIMESTAMP = currentTimestamp(),",
				"          SOURCE_FILE_NAME = 'Petlicense') ~> addtimesource",
				"addtimeANDsource sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          STATE_FIPS = state_fips,",
				"          STATE = state,",
				"          STATE_ABBR = state_abbr,",
				"          ZIPCODE = zipcode,",
				"          COUNTY = county,",
				"          CITY = city,",
				"          LOAD_TIMESTAMP,",
				"          SOURCE_FILE_NAME",
				"     )) ~> LocationStage",
				"addtimesource sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          LICENSE_ISSUE_DATE = License_Issue_Date,",
				"          LICENSE_NUMBER = License_Number,",
				"          ANIMAL_NAME = Animal_Name,",
				"          SPECIES = Species,",
				"          PRIMARY_BREED = Primary_Breed,",
				"          SECONDARY_BREED = Secondary_Breed,",
				"          ZIP_CODE = Zip_Code,",
				"          LOAD_TIMESTAMP,",
				"          SOURCE_FILE_NAME",
				"     )) ~> Petstage"
			]
		}
	}
}